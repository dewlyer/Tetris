/*!
 * tetris 1.0.0
 * a Russian tile-matching puzzle video game
 * https://github.com/dewlyer/tetris.git
 *
 * Copyright (c) 2016 dewlyer dewlyer@gmial.com
 *
 * Released under the MIT license
 */
 !function(t,o,i){"use strict";var e={options:{blockWidth:1},_canvas:null,_ctx:null,_$game:null,_$canvas:null,_$gameholder:null,_$start:null,_$score:null,_$scoreText:null,_theme:{strokeWidth:1,backgroundGrid:"#ccc",background:"#ccc"},_shapes:{line:[[0,-1,0,-2,0,-3,0,-4],[2,-2,1,-2,0,-2,-1,-2],[0,-4,0,-3,0,-2,0,-1],[-1,-2,0,-2,1,-2,2,-2]],square:[[0,0,1,0,0,-1,1,-1],[1,0,1,-1,0,0,0,-1],[1,-1,0,-1,1,0,0,0],[0,-1,0,0,1,-1,1,0]],arrow:[[0,-1,1,-1,2,-1,1,-2],[1,0,1,-1,1,-2,0,-1],[2,-1,1,-1,0,-1,1,0],[1,-2,1,-1,1,0,2,-1]],rightHook:[[2,0,1,0,1,-1,1,-2],[2,-2,2,-1,1,-1,0,-1],[0,-2,1,-2,1,-1,1,0],[0,0,0,-1,1,-1,2,-1]],leftHook:[[0,0,1,0,1,-1,1,-2],[2,0,2,-1,1,-1,0,-1],[2,-2,1,-2,1,-1,1,0],[0,-2,0,-1,1,-1,2,-1]],rightZag:[[1,0,1,-1,0,-1,0,-2],[2,-1,1,-1,1,0,0,0],[0,-2,0,-1,1,-1,1,0],[0,0,1,0,1,-1,2,-1]],leftZag:[[0,0,0,-1,1,-1,1,-2],[2,-1,1,-1,1,-2,0,-2],[1,-2,1,-1,0,-1,0,0],[0,-2,1,-2,1,-1,2,-1]]},_shapeFactory:null,init:function(){var t=this;t._create(),t._setup()},updateSiezs:function(){this._PIXEL_WIDTH=this._canvas.width(),this._PIXEL_HEIGHT=this._canvas.height(),this._BLOCK_WIDTH=this.options.blockWidth,this._BLOCK_HEIGHT=Math.floor(this._canvas.height()/this._canvas.width()*this._BLOCK_WIDTH),this._block_size=Math.floor(this._PIXEL_WIDTH/this._BLOCK_WIDTH),this._border_width=2,this._PIXEL_WIDTH=this._block_size*this._BLOCK_WIDTH,this._PIXEL_HEIGHT=this._block_size*this._BLOCK_HEIGHT,this._$canvas.attr("width",this._PIXEL_WIDTH).attr("height",this._PIXEL_HEIGHT)},_create:function(){var t=this;t._createHolder(),t._createUI(),t._createControls()},_setup:function(){var t=this;t._setupShapeFactory(),t._setupFilled(),t._setupInfo(),t._setupBoard()},_createHolder:function(){console.log("_createHolder");var o=this;this._$gameholder=t('<div class="tetris-game-holder"></div>'),this._$gameholder.css({position:"relative",width:"100%",height:"100%"}),t(i.body).prepend(this._$gameholder),o._$score=t('<div class="tetris-score-holder"></div>'),o._$gameholder.append(o._$score),o._$start=t('<div class="tetris-start-holder"></div>'),o._$gameholder.append(o._$start)},_createUI:function(){console.log("_createUI");var o=this;o._$canvas=t('<canvas class="tetris-canvas"></canvas>'),o._$canvas.css("background-color",this._theme.background),o._$gameholder.prepend(this._$canvas),o._canvas=this._$canvas.get(0),o._ctx=this._canvas.getContext("2d")},_createControls:function(){console.log("_createControls")},_setupShapeFactory:function(){function o(t,o,i,e){this.x=0,this.y=0,this.symmetrical=i,this.blockType=e,this.blockVariation=null,this.blocksLen=o[0].length,this.orientations=o,this.orientation=0,this.init()}var i=this;null===i._shapeFactory&&(o.prototype.init=function(){this.orientation=0,this.x=Math.floor(i._BLOCK_WIDTH/2)-1,this.y=-1},o.prototype.rotate=function(){var t=(this.orientation+("left"===direction?1:-1)+4)%4;i._checkCollisions(this.x,this.y,this.getBlocks(t))||(this.orientation=t,i._board.renderChanged=!0)},o.prototype.moveRight=function(){i._checkCollisions(this.x+1,this.y,this.getBlocks())||(this.x++,i._board.renderChanged=!0)},o.prototype.moveLeft=function(){i._checkCollisions(this.x-1,this.y,this.getBlocks())||(this.x--,i._board.renderChanged=!0)},o.prototype.drop=function(){i._checkCollisions(this.x,this.y+1,this.getBlocks())||(this.y++,i._board.dropCount=-1,i._board.animate(),i._board.renderChanged=!0)},o.prototype.getBlocks=function(){return this.orientations[void 0!==orientation?orientation:this.orientation]},o.prototype.getBounds=function(){for(var o=t.isArray(_blocks)?_blocks:this.getBlocks(_blocks),i=0,e=o.length,s=999,a=-999,n=999,r=-999;e>i;i+=2)o[i]<s&&(s=o[i]),o[i]>a&&(a=o[i]),o[i+1]<n&&(n=o[i+1]),o[i+1]>r&&(r=o[i+1]);return{left:s,right:a,top:n,bottom:r,width:a-s,height:r-n}},o.prototype.draw=function(){for(var t=this.getBlocks(_orientation),o=void 0===_x?this.x:_x,e=void 0===_y?this.y:_y,s=0,a=0;s<this.blocksLen;s+=2)i._board.drawBlock(o+t[s],e+t[s+1],this.blockType,this.blockVariation,a,this.orientation,!0),a++},this._shapeFactory={line:new o(i,i._shapes.line,!1,"line"),square:new o(i,i._shapes.square,!1,"square"),arrow:new o(i,i._shapes.arrow,!1,"arrow"),leftHook:new o(i,i._shapes.leftHook,!1,"leftHook"),rightHook:new o(i,i._shapes.rightHook,!1,"rightHook"),leftZag:new o(i,i._shapes.leftZag,!1,"leftZag"),rightZag:new o(i,i._shapes.rightZag,!1,"rightZag")})},_setupFilled:function(){console.log("_setupFilled")},_setupInfo:function(){console.log("_setupInfo")},_setupBoard:function(){console.log("_setupBoard")},_drawBackground:function(){var t=this._theme.strokeWidth;Math.round(.23),Math.round(.3);this._ctx.globalAlpha=1,this._ctx.fillStyle=this._theme.backgroundGrid;for(var o=0;o<this._BLOCK_WIDTH;o++)for(var i=0;i<this._BLOCK_HEIGHT;i++){var e=o*this._block_size,s=i*this._block_size;this._ctx.fillRect(e+t,s+t,this._block_size-2*t,this._block_size-2*t)}this._ctx.globalAlpha=1},drawBlock:function(){},start:function(){this._doStart()},restart:function(){this._doStart()},_doStart:function(){}};t(i).ready(function(){var t=Object.create(e);t.init()})}(jQuery,window,document);