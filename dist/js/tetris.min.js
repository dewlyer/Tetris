/*!
 * tetris 1.0.0
 * a Russian tile-matching puzzle video game
 * https://github.com/dewlyer/tetris.git
 *
 * Copyright (c) 2016 dewlyer dewlyer@gmial.com
 *
 * Released under the MIT license
 */
 "use strict";var Tetris={options:{blockWidth:1},_canvas:null,_ctx:null,_$game:null,_$canvas:null,_$gameholder:null,_$start:null,_$score:null,_$scoreText:null,_theme:{strokeWidth:1,backgroundGrid:"#ccc",background:"#ccc"},_shapes:{line:[[0,-1,0,-2,0,-3,0,-4],[2,-2,1,-2,0,-2,-1,-2],[0,-4,0,-3,0,-2,0,-1],[-1,-2,0,-2,1,-2,2,-2]],square:[[0,0,1,0,0,-1,1,-1],[1,0,1,-1,0,0,0,-1],[1,-1,0,-1,1,0,0,0],[0,-1,0,0,1,-1,1,0]],arrow:[[0,-1,1,-1,2,-1,1,-2],[1,0,1,-1,1,-2,0,-1],[2,-1,1,-1,0,-1,1,0],[1,-2,1,-1,1,0,2,-1]],rightHook:[[2,0,1,0,1,-1,1,-2],[2,-2,2,-1,1,-1,0,-1],[0,-2,1,-2,1,-1,1,0],[0,0,0,-1,1,-1,2,-1]],leftHook:[[0,0,1,0,1,-1,1,-2],[2,0,2,-1,1,-1,0,-1],[2,-2,1,-2,1,-1,1,0],[0,-2,0,-1,1,-1,2,-1]],rightZag:[[1,0,1,-1,0,-1,0,-2],[2,-1,1,-1,1,0,0,0],[0,-2,0,-1,1,-1,1,0],[0,0,1,0,1,-1,2,-1]],leftZag:[[0,0,0,-1,1,-1,1,-2],[2,-1,1,-1,1,-2,0,-2],[1,-2,1,-1,0,-1,0,0],[0,-2,1,-2,1,-1,2,-1]]},_shapeFactory:null,init:function(){var t=this;t._create(),t._setup()},updateSiezs:function(){this._PIXEL_WIDTH=this._canvas.width(),this._PIXEL_HEIGHT=this._canvas.height(),this._BLOCK_WIDTH=this.options.blockWidth,this._BLOCK_HEIGHT=Math.floor(this._canvas.height()/this._canvas.width()*this._BLOCK_WIDTH),this._block_size=Math.floor(this._PIXEL_WIDTH/this._BLOCK_WIDTH),this._border_width=2,this._PIXEL_WIDTH=this._block_size*this._BLOCK_WIDTH,this._PIXEL_HEIGHT=this._block_size*this._BLOCK_HEIGHT,this._$canvas.attr("width",this._PIXEL_WIDTH).attr("height",this._PIXEL_HEIGHT)},_create:function(){var t=this;t._createHolder(),t._createUI(),t._createControls()},_setup:function(){var t=this;t._setupShapeFactory(),t._setupFilled(),t._setupInfo(),t._setupBoard()},_createHolder:function(){console.log("_createHolder"),this._$gameholder=$('<div class="tetris-game-holder"></div>'),this._$gameholder.css({position:"relative",width:"100%",height:"100%"}),$(document.body).prepend(this._$gameholder),this._$canvas=$('<canvas class="tetris-canvas"></canvas>'),this._$canvas.css("background-color",this._theme.background),this._$gameholder.append(this._$canvas),this._canvas=this._$canvas.get(0),this._ctx=this._canvas.getContext("2d")},_createUI:function(){console.log("_createUI")},_createControls:function(){console.log("_createControls")},_setupShapeFactory:function(){function t(t,o,i,s){this.x=0,this.y=0,this.symmetrical=i,this.blockType=s,this.blockVariation=null,this.blocksLen=o[0].length,this.orientations=o,this.orientation=0,this.init()}var o=this;null===o._shapeFactory&&(t.prototype.init=function(){this.orientation=0,this.x=Math.floor(o._BLOCK_WIDTH/2)-1,this.y=-1},t.prototype.rotate=function(){var t=(this.orientation+("left"===direction?1:-1)+4)%4;o._checkCollisions(this.x,this.y,this.getBlocks(t))||(this.orientation=t,o._board.renderChanged=!0)},t.prototype.moveRight=function(){o._checkCollisions(this.x+1,this.y,this.getBlocks())||(this.x++,o._board.renderChanged=!0)},t.prototype.moveLeft=function(){o._checkCollisions(this.x-1,this.y,this.getBlocks())||(this.x--,o._board.renderChanged=!0)},t.prototype.drop=function(){o._checkCollisions(this.x,this.y+1,this.getBlocks())||(this.y++,o._board.dropCount=-1,o._board.animate(),o._board.renderChanged=!0)},t.prototype.getBlocks=function(){return this.orientations[void 0!==orientation?orientation:this.orientation]},t.prototype.getBounds=function(){for(var t=$.isArray(_blocks)?_blocks:this.getBlocks(_blocks),o=0,i=t.length,s=999,e=-999,n=999,a=-999;i>o;o+=2)t[o]<s&&(s=t[o]),t[o]>e&&(e=t[o]),t[o+1]<n&&(n=t[o+1]),t[o+1]>a&&(a=t[o+1]);return{left:s,right:e,top:n,bottom:a,width:e-s,height:a-n}},t.prototype.draw=function(){for(var t=this.getBlocks(_orientation),i=void 0===_x?this.x:_x,s=void 0===_y?this.y:_y,e=0,n=0;e<this.blocksLen;e+=2)o._board.drawBlock(i+t[e],s+t[e+1],this.blockType,this.blockVariation,n,this.orientation,!0),n++},this._shapeFactory={line:new t(o,o._shapes.line,!1,"line"),square:new t(o,o._shapes.square,!1,"square"),arrow:new t(o,o._shapes.arrow,!1,"arrow"),leftHook:new t(o,o._shapes.leftHook,!1,"leftHook"),rightHook:new t(o,o._shapes.rightHook,!1,"rightHook"),leftZag:new t(o,o._shapes.leftZag,!1,"leftZag"),rightZag:new t(o,o._shapes.rightZag,!1,"rightZag")})},_setupFilled:function(){console.log("_setupFilled")},_setupInfo:function(){console.log("_setupInfo")},_setupBoard:function(){console.log("_setupBoard")},_drawBackground:function(){var t=this._theme.strokeWidth;Math.round(.23),Math.round(.3);this._ctx.globalAlpha=1,this._ctx.fillStyle=this._theme.backgroundGrid;for(var o=0;o<this._BLOCK_WIDTH;o++)for(var i=0;i<this._BLOCK_HEIGHT;i++){var s=o*this._block_size,e=i*this._block_size;this._ctx.fillRect(s+t,e+t,this._block_size-2*t,this._block_size-2*t)}this._ctx.globalAlpha=1},drawBlock:function(){},start:function(){this._doStart()},restart:function(){this._doStart()},_doStart:function(){}};$(document).ready(function(){var t=Object.create(Tetris);t.init()});